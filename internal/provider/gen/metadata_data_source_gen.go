// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package gen

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
)

func MetadataDataSourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"alz_library_references": schema.ListAttribute{
				ElementType:         types.StringType,
				Computed:            true,
				Description:         "A list of all loaded ALZ library references.",
				MarkdownDescription: "A list of all loaded ALZ library references.",
			},
			"id": schema.StringAttribute{
				Computed:            true,
				Description:         "A computed value representing the unique identifier for the architecture. Mandatory for acceptance testing.",
				MarkdownDescription: "A computed value representing the unique identifier for the architecture. Mandatory for acceptance testing.",
			},
		},
		MarkdownDescription: "The metadata data source provides metadata information from ALZ library.",
	}
}

type MetadataModel struct {
	AlzLibraryReferences types.List   `tfsdk:"alz_library_references"`
	Id                   types.String `tfsdk:"id"`
}
